Базово:
 -систему управления юнитами
  (юниты - отдельный класс, управление через методы), менеджер ресурсов и передачу их

-способ их добычи
 (ещё один объект - добытчик ресурсов, что просто позволяет со своего счёта на другой перевести)

Отдельно, сверху над ними - визуальное управление
Но оно не должно быть встроено в базовые классы, всё только извне

----
Wallet
# прямой доступ лучше не давать, т.к. количество операций строго ограничено. Это нужно лишь для программистов, чтобы руки не чесались
- _amount: float
— приватный, к нему прямой доступ не давать
- get_wallet_info()
— просто возвращает информацию о кошельке, к сожалению не знаю в каком формате. Возможно просто float, в котором указано количество ресурса
- increase(amount: float)
— на сколько увеличить
- decrease(amount: float)
— на сколько уменьшить

ResourceContiniousManager
- transaction(from: Wallet, to: Wallet, amount, speed=0, delay=0)
— не знаю как сделать постепенную транзакцию, чтобы непрерывно добывать. Не факт что понадобится, но лучше сделать возможность делать постепенную транзакцию и транзакцию с задержкой (чисто про запас на будущие сценарии - в целом не шибко сложно сделать по идее)
— не знаю как лучше сделать, один на все ресурсы, или несколько на свой.

Inventory
- _inventory: list
— лист из уникальных объектов, не важно какого класса и даже какого интерфейса. Главное чтобы просто имели соответствующие характеристики по которым их ищут
- get_inventory_info(): list
— возвращает лист с ИНФОРМАЦИЯМИ о каждом из объектов. Например return [stuff.info() for stuff in _inventory]. Обязательно именно в том порядке, которое указано в листе (ну или просто завести каждой stuff ID, что будет очень даже полезно)
- get_from_inventory(ID): object
— забирает объект из инвенторя штуку с ID и удаляет её из инвенторя (просто отобрали)
- set_into_inventory(object)
— наоборот отдаёт

InventoryManager
- transaction(from: Inventory, to: Inventory, ID)
— вот тут я жёско тупанул, надо бы всё де каждому object ещё и уникальную ссылку дать. С этим надо бы подумать, может и просто object напрямую попросить, всё равно в python он не байты копирует, а лишь ссылку на объект